23:31:11.859 [info] Child {LoggerFileBackend, :general_log} of Supervisor Logger.Backends.Supervisor started
Pid: #PID<0.114.0>
Start Call: Logger.Backends.Watcher.start_link({{LoggerFileBackend, :general_log}, {LoggerFileBackend, :general_log}})
Restart: :transient
Shutdown: 5000
Type: :worker
23:31:11.860 [info] Child Logger.Backends.Supervisor of Supervisor Logger.Backends.Internal started
Pid: #PID<0.113.0>
Start Call: Logger.Backends.Supervisor.start_link([{LoggerFileBackend, :general_log}])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:31:11.860 [info] Child Logger.Backends.Internal of Supervisor Logger.Supervisor started
Pid: #PID<0.109.0>
Start Call: Logger.Backends.Internal.start_link([])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:31:11.860 [info] Application logger started at :nonode@nohost
23:31:14.216 [info] Child :ttb_autostart of Supervisor :runtime_tools_sup started
Pid: #PID<0.120.0>
Start Call: :ttb_autostart.start_link()
Restart: :temporary
Shutdown: 3000
Type: :worker
23:31:14.216 [info] Application runtime_tools started at :nonode@nohost
23:31:14.217 [info] Application erts started at :nonode@nohost
23:31:14.217 [info] Application lx_lexical_shared started at :nonode@nohost
23:31:14.217 [info] Application lx_sourceror started at :nonode@nohost
23:31:14.217 [info] Application lx_common started at :nonode@nohost
23:31:14.217 [info] Application lx_elixir_sense started at :nonode@nohost
23:31:14.218 [info] Application jason started at :nonode@nohost
23:31:14.218 [info] Application logger_file_backend started at :nonode@nohost
23:31:14.218 [info] Application lx_path_glob started at :nonode@nohost
23:31:14.218 [info] Application lx_proto started at :nonode@nohost
23:31:14.218 [info] Application lx_protocol started at :nonode@nohost
23:31:14.232 [info] Child LXical.Document.Store of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.135.0>
Start Call: LXical.Document.Store.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:14.234 [info] Child LXical.Server of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.136.0>
Start Call: LXical.Server.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:14.235 [info] Child LXical.Server.ProjectSupervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.137.0>
Start Call: DynamicSupervisor.start_link([name: LXical.Server.ProjectSupervisor, strategy: :one_for_one])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:31:14.235 [info] Child LXical.Server.Provider.Queue.Supervisor of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.138.0>
Start Call: Task.Supervisor.start_link([name: LXical.Server.Provider.Queue.Supervisor])
Restart: :permanent
Shutdown: :infinity
Type: :supervisor
23:31:14.237 [info] Child LXical.Server.Provider.Queue of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.139.0>
Start Call: LXical.Server.Provider.Queue.start_link([])
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:14.237 [info] Child LXical.Server.Transport.StdIO of Supervisor LXical.Server.Supervisor started
Pid: #PID<0.140.0>
Start Call: LXical.Server.Transport.StdIO.start_link(:standard_io, &LXical.Server.protocol_message/1)
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:14.238 [info] Application lx_server started at :nonode@nohost
23:31:14.267 [info] Starting project at uri file:///home/douglas/Projects/ativar
23:31:14.307 [info] Child {LXical.Server.Project.Progress, "ativar"} of Supervisor :"ativar::supervisor" started
Pid: #PID<0.142.0>
Start Call: LXical.Server.Project.Progress.start_link(%LXical.Project{root_uri: "file:///home/douglas/Projects/ativar", mix_exs_uri: "file:///home/douglas/Projects/ativar/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 37874, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:14.315 [info] Child {LXical.RemoteControl.ProjectNodeSupervisor, "ativar"} of Supervisor :"ativar::supervisor" started
Pid: #PID<0.143.0>
Start Call: LXical.RemoteControl.ProjectNodeSupervisor.start_link(%LXical.Project{root_uri: "file:///home/douglas/Projects/ativar", mix_exs_uri: "file:///home/douglas/Projects/ativar/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 37874, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:14.341 [info] Child :erl_epmd of Supervisor :net_sup started
Pid: #PID<0.146.0>
Start Call: :erl_epmd.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
23:31:14.344 [info] Child :auth of Supervisor :net_sup started
Pid: #PID<0.147.0>
Start Call: :auth.start_link()
Restart: :permanent
Shutdown: 2000
Type: :worker
23:31:14.351 [info] Child :net_kernel of Supervisor :net_sup started
Pid: #PID<0.148.0>
Start Call: :net_kernel.start_link(%{clean_halt: false, name: :"manager-ativar-37874@127.0.0.1", name_domain: :longnames, net_tickintensity: 4, net_ticktime: 60, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 2000
Type: :worker
23:31:14.351 [info] Child :net_sup_dynamic of Supervisor :kernel_sup started
Pid: #PID<0.145.0>
Start Call: :erl_distribution.start_link(%{clean_halt: false, name: :"manager-ativar-37874@127.0.0.1", name_domain: :longnames, net_tickintensity: 4, net_ticktime: 60, supervisor: :net_sup_dynamic})
Restart: :permanent
Shutdown: 1000
Type: :supervisor
23:31:14.994 [info] Child {LXical.Server.Project.Node, "ativar"} of Supervisor :"ativar::supervisor" started
Pid: #PID<0.144.0>
Start Call: LXical.Server.Project.Node.start_link(%LXical.Project{root_uri: "file:///home/douglas/Projects/ativar", mix_exs_uri: "file:///home/douglas/Projects/ativar/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 37874, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:15.011 [info] Child {LXical.Server.Project.Diagnostics, "ativar"} of Supervisor :"ativar::supervisor" started
Pid: #PID<0.156.0>
Start Call: LXical.Server.Project.Diagnostics.start_link(%LXical.Project{root_uri: "file:///home/douglas/Projects/ativar", mix_exs_uri: "file:///home/douglas/Projects/ativar/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 37874, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:15.019 [info] Child {LXical.Server.Project.Intelligence, "ativar"} of Supervisor :"ativar::supervisor" started
Pid: #PID<0.157.0>
Start Call: LXical.Server.Project.Intelligence.start_link(%LXical.Project{root_uri: "file:///home/douglas/Projects/ativar", mix_exs_uri: "file:///home/douglas/Projects/ativar/mix.exs", mix_project?: true, mix_env: nil, mix_target: nil, env_variables: %{}, project_module: nil, entropy: 37874, project_config: []})
Restart: :permanent
Shutdown: 5000
Type: :worker
23:31:15.020 [info] Lexical Initialized
23:31:15.020 [info] opened file:///home/douglas/Projects/ativar/lib/ativar_web/live/navbar.ex
23:31:18.206 [info] Compiled ativar in 3.2 seconds
23:32:37.666 [info] opened file:///home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex
23:37:49.552 [info] Compiled ativar in 96 ms
23:37:55.041 [info] Compiled ativar in 118 ms
23:43:00.860 [info] Compiled ativar in 90 ms
23:43:03.060 [info] Completion for %LXical.Document.Position{line: 10, character: 73, valid?: true, context_line: {:line, "          {\"Geral\", Routes.dashboard_index_path(socket, :index), :ativar},", "\n", 10, true}, document_line_count: 23, starting_index: 1}
23:43:05.106 [info] Compiled ativar in 334 ms
23:43:06.900 [info] Local completions are []
23:43:06.900 [info] Emitting completions: []
23:45:21.393 [info] Completion for %LXical.Document.Position{line: 24, character: 13, valid?: true, context_line: {:line, "  def lucide", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:21.404 [info] Local completions are []
23:45:21.404 [info] Emitting completions: []
23:45:22.259 [info] Completion for %LXical.Document.Position{line: 24, character: 18, valid?: true, context_line: {:line, "  def lucide_icon", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:22.300 [info] Local completions are []
23:45:22.301 [info] Emitting completions: []
23:45:23.169 [info] Completion for %LXical.Document.Position{line: 24, character: 19, valid?: true, context_line: {:line, "  def lucide_icon(%)", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:23.170 [info] Local completions are []
23:45:23.170 [info] Emitting completions: []
23:45:26.559 [info] Completion for %LXical.Document.Position{line: 24, character: 25, valid?: true, context_line: {:line, "  def lucide_icon(%{name})", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:26.599 [info] Emitting completions: []
23:45:26.651 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Variable{name: "name"}]
23:45:26.657 [info] Emitting completions: [#Protocol.Types.Completion.Item<[detail: "name", kind: :variable, label: "name", sort_text: "099_name", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 34, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(30 lines)>, ...>, edits: %LXical.Document.Edit{text: "name", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 21, valid?: true, context_line: {:line, "  def lucide_icon(%{name})", "\n", 24, true}, document_line_count: 30, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 25, valid?: true, context_line: {:line, "  def lucide_icon(%{name})", "\n", 24, true}, document_line_count: 30, starting_index: 1}}}}]>]
23:45:27.453 [info] Emitting completions: []
23:45:29.208 [info] Completion for %LXical.Document.Position{line: 24, character: 34, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar})", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:29.241 [info] Local completions are []
23:45:29.241 [info] Emitting completions: []
23:45:29.988 [info] Completion for %LXical.Document.Position{line: 24, character: 38, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_log})", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:30.055 [info] Local completions are []
23:45:30.055 [info] Emitting completions: []
23:45:30.920 [info] Completion for %LXical.Document.Position{line: 24, character: 39, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo})", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:30.948 [info] Local completions are []
23:45:30.948 [info] Emitting completions: []
23:45:33.101 [info] Completion for %LXical.Document.Position{line: 24, character: 50, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}
23:45:33.168 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Variable{name: "assigns"}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["assigns"], arity: 1, name: "assigns_to_attributes", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["assigns", "exclude"], arity: 2, name: "assigns_to_attributes", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{defaults: 1}}]
23:45:33.184 [info] Emitting completions: [#Protocol.Types.Completion.Item<[detail: "assigns", kind: :variable, label: "assigns", sort_text: "099_assigns", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 58, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(30 lines)>, ...>, edits: %LXical.Document.Edit{text: "assigns", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 50, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assigns_to_attributes(assigns)", sort_text: "094_assigns_to_attributes:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 58, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(30 lines)>, ...>, edits: %LXical.Document.Edit{text: "assigns_to_attributes(${1:assigns})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 50, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assigns_to_attributes(assigns, exclude)", sort_text: "094_assigns_to_attributes:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 58, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(30 lines)>, ...>, edits: %LXical.Document.Edit{text: "assigns_to_attributes(${1:assigns}, ${2:exclude})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 50, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns)", "\n", 24, true}, document_line_count: 30, starting_index: 1}}}}]>]
23:45:33.842 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, label: "do/end block", sort_text: "099_do/end block", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 61, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(30 lines)>, ...>, edits: %LXical.Document.Edit{text: "do\n  $0\nend", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 52, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 30, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 54, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 30, starting_index: 1}}}}]>]
23:45:35.696 [info] Completion for %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}
23:45:35.780 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Function{argument_names: [], arity: 0, name: "delete_csrf_token", origin: "Phoenix.Controller", type: :function, visibility: :public, spec: "", metadata: %{delegate_to: {Plug.CSRFProtection, :delete_csrf_token, 0}}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call"], arity: 1, name: "def", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call", "expr"], arity: 2, name: "def", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["funs", "opts"], arity: 2, name: "defdelegate", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["fields"], arity: 1, name: "defexception", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["guard"], arity: 1, name: "defguard", origin: "Kernel", type: :macro, visibility: :public, spec: "@spec defguard(Macro.t) :: Macro.t", metadata: %{since: "1.6.0"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["guard"], arity: 1, name: "defguardp", origin: "Kernel", type: :macro, visibility: :public, spec: "@spec defguardp(Macro.t) :: Macro.t", metadata: %{since: "1.6.0"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["name", "opts"], arity: 2, name: "defimpl", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["name", "opts", "do_block"], arity: 3, name: "defimpl", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call"], arity: 1, name: "defmacro", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call", "expr"], arity: 2, name: "defmacro", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call"], arity: 1, name: "defmacrop", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call", "expr"], arity: 2, name: "defmacrop", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["alias", "do_block"], arity: 2, name: "defmodule", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["keywords_or_behaviour"], arity: 1, name: "defoverridable", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call"], arity: 1, name: "defp", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["call", "expr"], arity: 2, name: "defp", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["name", "do_block"], arity: 2, name: "defprotocol", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["fields"], arity: 1, name: "defstruct", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["left", "right"], arity: 2, name: "destructure", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgid"], arity: 2, name: "dgettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dgettext(domain :: Macro.t, msgid :: String.t, bindings :: Macro.t) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgid", "bindings"], arity: 3, name: "dgettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dgettext(domain :: Macro.t, msgid :: String.t, bindings :: Macro.t) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgid"], arity: 2, name: "dgettext_noop", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dgettext_noop(domain :: String.t, msgid :: String.t) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgid", "msgid_plural", "n"], arity: 4, name: "dngettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dngettext(\n  domain :: Macro.t,\n  msgid :: String.t,\n  msgid_plural :: String.t,\n  n :: Macro.t,\n  bindings :: Macro.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgid", "msgid_plural", "n", "bindings"], arity: 5, name: "dngettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dngettext(\n  domain :: Macro.t,\n  msgid :: String.t,\n  msgid_plural :: String.t,\n  n :: Macro.t,\n  bindings :: Macro.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgid", "msgid_plural"], arity: 3, name: "dngettext_noop", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dngettext_noop(\n  domain :: Macro.t,\n  msgid :: String.t,\n  msgid_plural :: String.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgctxt", "msgid"], arity: 3, name: "dpgettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dpgettext(\n  domain :: Macro.t,\n  msgctxt :: String.t,\n  msgid :: String.t,\n  bindings :: Macro.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgctxt", "msgid", "bindings"], arity: 4, name: "dpgettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dpgettext(\n  domain :: Macro.t,\n  msgctxt :: String.t,\n  msgid :: String.t,\n  bindings :: Macro.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgctxt", "msgid"], arity: 3, name: "dpgettext_noop", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgctxt", "msgid", "msgid_plural", "n"], arity: 5, name: "dpngettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dpngettext(\n  domain :: Macro.t,\n  msgctxt :: String.t,\n  msgid :: String.t,\n  msgid_plural :: String.t,\n  n :: Macro.t,\n  bindings :: Macro.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["domain", "msgctxt", "msgid", "msgid_plural", "n", "bindings"], arity: 6, name: "dpngettext", origin: "AtivarWeb.Gettext", type: :macro, visibility: :public, spec: "@spec dpngettext(\n  domain :: Macro.t,\n  msgctxt :: String.t,\n  msgid :: String.t,\n  msgid_plural :: String.t,\n  n :: Macro.t,\n  bindings :: Macro.t\n) :: Macro.t", metadata: %{implementing: Gettext.Backend}}, %LXical.RemoteControl.Completion.Candidate.Macro{ (truncated)
23:45:35.903 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "delete_csrf_token()", sort_text: "094_delete_csrf_token:000", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "delete_csrf_token", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "def (define a function)", sort_text: "090_def (define a function)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "def ${1:name}($2) do\n  $0\nend", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "defdelegate (define a delegate function)", sort_text: "098_defdelegate (define a delegate function)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "defdelegate ${1:call}(${2:args}), to: ${3:module}", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "defexception (define an exception)", sort_text: "098_defexception (define an exception)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "defexception [${1::message}]", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "@spec defguard(Macro.t) :: Macro.t", insert_text_format: :snippet, kind: :class, label: "defguard (define a guard macro)", sort_text: "098_defguard (define a guard macro)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "defguard ${1:guard}(${2:args}) when $0", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "@spec defguardp(Macro.t) :: Macro.t", insert_text_format: :snippet, kind: :class, label: "defguardp (define a private guard macro)", sort_text: "098_defguardp (define a private guard macro)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "defguardp ${1:guard}(${2:args}) when $0", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "defimpl (define a protocol implementation)", sort_text: "098_defimpl (define a protocol implementation)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "defimpl ${1:protocol_name}, for: ${2:struct_name} do\n  $0\nend", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "defmacro (define a macro)", sort_text: "093_defmacro (define a macro)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "defmacro ${1:name}($2) do\n  $0\nend", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 3, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 5, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "defmacrop (define a private macro)", sort_text: "094_defmacrop (define a private macro)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 line (truncated)
23:45:38.194 [info] Completion for %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}
23:45:38.286 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Variable{name: "assigns"}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["socket_or_assigns", "keyword_or_map"], arity: 2, name: "assign", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["socket_or_assigns", "key", "value"], arity: 3, name: "assign", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["socket_or_assigns", "key", "fun"], arity: 3, name: "assign_new", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["assigns"], arity: 1, name: "assigns_to_attributes", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["assigns", "exclude"], arity: 2, name: "assigns_to_attributes", origin: "Phoenix.Component", type: :function, visibility: :public, spec: "", metadata: %{defaults: 1}}]
23:45:38.312 [info] Emitting completions: [#Protocol.Types.Completion.Item<[detail: "assigns", kind: :variable, label: "assigns", sort_text: "099_assigns", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "assigns", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assign(socket_or_assigns, keyword_or_map)", sort_text: "094_assign:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "assign(${1:socket_or_assigns}, ${2:keyword_or_map})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assign(socket_or_assigns, key, value)", sort_text: "094_assign:003", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "assign(${1:socket_or_assigns}, ${2:key}, ${3:value})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assign_new(socket_or_assigns, key, fun)", sort_text: "094_assign_new:003", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "assign_new(${1:socket_or_assigns}, ${2:key}, ${3:fun})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assigns_to_attributes(assigns)", sort_text: "094_assigns_to_attributes:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "assigns_to_attributes(${1:assigns})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "assigns_to_attributes(assigns, exclude)", sort_text: "094_assigns_to_attributes:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 64, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "assigns_to_attributes(${1:assigns}, ${2:exclude})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 24, character: 43, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 24, character: 49, valid?: true, context_line: {:line, "  def lucide_icon(%{name: :ativar_logo} = assigns) do", "\n", 24, true}, document_line_count: 32, starting_index: 1}}}}]>]
23:45:44.834 [info] Completion for %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}
23:45:44.977 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~C", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["date_string", "modifiers"], arity: 2, name: "~D", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["naive_datetime_string", "modifiers"], arity: 2, name: "~N", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~R", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~S", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["time_string", "modifiers"], arity: 2, name: "~T", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["datetime_string", "modifiers"], arity: 2, name: "~U", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{since: "1.9.0"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~W", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~c", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~r", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~s", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~w", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["route", "extra"], arity: 2, name: "~p", origin: "Phoenix.VerifiedRoutes", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["expr", "opts"], arity: 2, name: "~E", origin: "Phoenix.HTML", type: :macro, visibility: :public, spec: "", metadata: %{deprecated: "use the ~H sigil instead"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["expr", "opts"], arity: 2, name: "~e", origin: "Phoenix.HTML", type: :macro, visibility: :public, spec: "", metadata: %{deprecated: "use the ~H sigil instead"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["arg", "list"], arity: 2, name: "~H", origin: "Phoenix.Component", type: :macro, visibility: :public, spec: "", metadata: %{type: :macro}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~C", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["date_string", "modifiers"], arity: 2, name: "~D", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["naive_datetime_string", "modifiers"], arity: 2, name: "~N", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~R", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~S", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["time_string", "modifiers"], arity: 2, name: "~T", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["datetime_string", "modifiers"], arity: 2, name: "~U", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{since: "1.9.0"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~W", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~c", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~r", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~s", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~w", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["arg", "list"], arity: 2, name: "~L", origin: "Phoenix.LiveView.Helpers", type: :macro, visibility: :public, spec: "", metadata: %{deprecated: "Use ~H instead"}}]
23:45:45.102 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~C(term, modifiers)", sort_text: "094_~C:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~C(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~D(date_string, modifiers)", sort_text: "094_~D:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~D(${1:date_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~N(naive_datetime_string, modifiers)", sort_text: "094_~N:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~N(${1:naive_datetime_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~R(term, modifiers)", sort_text: "094_~R:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~R(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~S(term, modifiers)", sort_text: "094_~S:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~S(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~T(time_string, modifiers)", sort_text: "094_~T:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~T(${1:time_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~U(datetime_string, modifiers)", sort_text: "094_~U:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~U(${1:datetime_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~W(term, modifiers)", sort_text: "094_~W:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~W(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~c(term, modifiers)", sort_text: "094_~c:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~c(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~r(term, modifiers)", sort_text: "094_~r:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 69, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(32 lines)>, ...>, edits: %LXical.Document.Edit{text: "~r(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 25, character: 5, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}, end: %LXical.Document.Position{line: 25, character: 6, valid?: true, context_line: {:line, "    ~", "\n", 25, true}, document_line_count: 32, starting_index: 1}}}}]>, #Protocol (truncated)
23:45:52.209 [info] Completion for %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:45:52.274 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_atom", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_atom(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_map", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["map", "key"], arity: 2, name: "is_map_key", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map_key(map, term) :: boolean", metadata: %{guard: true, since: "1.10.0"}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_number", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_number(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_atom", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_atom(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_map", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["map", "key"], arity: 2, name: "is_map_key", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map_key(map, term) :: boolean", metadata: %{guard: true, since: "1.10.0"}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_number", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_number(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["module", "opts"], arity: 2, name: "import", origin: "Kernel.SpecialForms", type: :macro, visibility: :public, spec: "", metadata: %{}}]
23:45:52.303 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_atom(term)", sort_text: "094_is_atom:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_atom(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map(term)", sort_text: "094_is_map:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map_key(map, key)", sort_text: "094_is_map_key:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map_key(${1:map}, ${2:key})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_number(term)", sort_text: "094_is_number:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_number(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_atom(term)", sort_text: "094_is_atom:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_atom(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map(term)", sort_text: "094_is_map:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map_key(map, key)", sort_text: "094_is_map_key:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map_key(${1:map}, ${2:key})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_number(term)", sort_text: "094_is_number:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_number(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "import (import a module's functions)", sort_text: "098_import (import a module's functions)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 86, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "import $0", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 6, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 8, valid?: true, context_line: {:line, "    <im", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>]
23:45:52.513 [info] Completion for %LXical.Document.Position{line: 26, character: 9, valid?: true, context_line: {:line, "    <img", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:45:52.607 [info] Local completions are []
23:45:52.607 [info] Emitting completions: []
23:45:53.716 [info] Completion for %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:45:53.811 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct"], arity: 1, name: "struct", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct", "fields"], arity: 2, name: "struct", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct"], arity: 1, name: "struct!", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct!(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct", "fields"], arity: 2, name: "struct!", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct!(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["assigns"], arity: 1, name: "search", origin: "AtivarWeb.CoreComponents", type: :function, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct"], arity: 1, name: "struct", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct", "fields"], arity: 2, name: "struct", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct"], arity: 1, name: "struct!", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct!(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["struct", "fields"], arity: 2, name: "struct!", origin: "Kernel", type: :function, visibility: :public, spec: "@spec struct!(module | struct, Enumerable.t) :: struct", metadata: %{defaults: 1}}]
23:45:53.850 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct(struct)", sort_text: "094_struct:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct(${1:struct})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct(struct, fields)", sort_text: "094_struct:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct(${1:struct}, ${2:fields})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct!(struct)", sort_text: "094_struct!:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct!(${1:struct})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct!(struct, fields)", sort_text: "094_struct!:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct!(${1:struct}, ${2:fields})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "search(assigns)", sort_text: "094_search:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "search(${1:assigns})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct(struct)", sort_text: "094_struct:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct(${1:struct})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct(struct, fields)", sort_text: "094_struct:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct(${1:struct}, ${2:fields})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct!(struct)", sort_text: "094_struct!:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct!(${1:struct})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "struct!(struct, fields)", sort_text: "094_struct!:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 91, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "struct!(${1:struct}, ${2:fields})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 10, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 13, valid?: true, context_line: {:line, "    <img src", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>]
23:45:55.087 [info] Completion for %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:45:55.224 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~C", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["date_string", "modifiers"], arity: 2, name: "~D", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["naive_datetime_string", "modifiers"], arity: 2, name: "~N", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~R", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~S", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["time_string", "modifiers"], arity: 2, name: "~T", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["datetime_string", "modifiers"], arity: 2, name: "~U", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{since: "1.9.0"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~W", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~c", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~r", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~s", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~w", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["route", "extra"], arity: 2, name: "~p", origin: "Phoenix.VerifiedRoutes", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["expr", "opts"], arity: 2, name: "~E", origin: "Phoenix.HTML", type: :macro, visibility: :public, spec: "", metadata: %{deprecated: "use the ~H sigil instead"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["expr", "opts"], arity: 2, name: "~e", origin: "Phoenix.HTML", type: :macro, visibility: :public, spec: "", metadata: %{deprecated: "use the ~H sigil instead"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["arg", "list"], arity: 2, name: "~H", origin: "Phoenix.Component", type: :macro, visibility: :public, spec: "", metadata: %{type: :macro}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~C", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["date_string", "modifiers"], arity: 2, name: "~D", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["naive_datetime_string", "modifiers"], arity: 2, name: "~N", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~R", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~S", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["time_string", "modifiers"], arity: 2, name: "~T", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["datetime_string", "modifiers"], arity: 2, name: "~U", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{since: "1.9.0"}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~W", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~c", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~r", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~s", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["term", "modifiers"], arity: 2, name: "~w", origin: "Kernel", type: :macro, visibility: :public, spec: "", metadata: %{}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["arg", "list"], arity: 2, name: "~L", origin: "Phoenix.LiveView.Helpers", type: :macro, visibility: :public, spec: "", metadata: %{deprecated: "Use ~H instead"}}]
23:45:55.310 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~C(term, modifiers)", sort_text: "094_~C:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~C(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~D(date_string, modifiers)", sort_text: "094_~D:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~D(${1:date_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~N(naive_datetime_string, modifiers)", sort_text: "094_~N:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~N(${1:naive_datetime_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~R(term, modifiers)", sort_text: "094_~R:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~R(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~S(term, modifiers)", sort_text: "094_~S:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~S(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~T(time_string, modifiers)", sort_text: "094_~T:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~T(${1:time_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~U(datetime_string, modifiers)", sort_text: "094_~U:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~U(${1:datetime_string}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~W(term, modifiers)", sort_text: "094_~W:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~W(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~c(term, modifiers)", sort_text: "094_~c:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~c(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 16, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "~r(term, modifiers)", sort_text: "094_~r:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 94, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "~r(${1:term}, ${2:modifiers})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 15, valid?: true, context_line: {:line, "    <img src={~}", "\n", 26,  (truncated)
23:45:57.345 [info] Completion for %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:45:57.443 [info] Local completions are [%LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_atom", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_atom(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_map", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["map", "key"], arity: 2, name: "is_map_key", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map_key(map, term) :: boolean", metadata: %{guard: true, since: "1.10.0"}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_number", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_number(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_atom", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_atom(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_map", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["map", "key"], arity: 2, name: "is_map_key", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_map_key(map, term) :: boolean", metadata: %{guard: true, since: "1.10.0"}}, %LXical.RemoteControl.Completion.Candidate.Function{argument_names: ["term"], arity: 1, name: "is_number", origin: "Kernel", type: :function, visibility: :public, spec: "@spec is_number(term) :: boolean", metadata: %{guard: true}}, %LXical.RemoteControl.Completion.Candidate.Macro{argument_names: ["module", "opts"], arity: 2, name: "import", origin: "Kernel.SpecialForms", type: :macro, visibility: :public, spec: "", metadata: %{}}]
23:45:57.483 [info] Emitting completions: [#Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_atom(term)", sort_text: "094_is_atom:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_atom(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map(term)", sort_text: "094_is_map:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map_key(map, key)", sort_text: "094_is_map_key:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map_key(${1:map}, ${2:key})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_number(term)", sort_text: "094_is_number:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_number(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_atom(term)", sort_text: "094_is_atom:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_atom(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map(term)", sort_text: "094_is_map:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_map_key(map, key)", sort_text: "094_is_map_key:002", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_map_key(${1:map}, ${2:key})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[insert_text_format: :snippet, kind: :function, label: "is_number(term)", sort_text: "094_is_number:001", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "is_number(${1:term})", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>, #Protocol.Types.Completion.Item<[detail: "", insert_text_format: :snippet, kind: :class, label: "import (import a module's functions)", sort_text: "098_import (import a module's functions)", text_edit: %LXical.Document.Changes{document: #LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 99, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, edits: %LXical.Document.Edit{text: "import $0", range: %LXical.Document.Range{start: %LXical.Document.Position{line: 26, character: 19, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}, end: %LXical.Document.Position{line: 26, character: 21, valid?: true, context_line: {:line, "    <img src={~/p/im}", "\n", 26, true}, document_line_count: 34, starting_index: 1}}}}]>]
23:46:06.536 [info] Completion for %LXical.Document.Position{line: 26, character: 30, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:06.624 [info] Local completions are []
23:46:06.624 [info] Emitting completions: []
23:46:06.816 [info] Completion for %LXical.Document.Position{line: 26, character: 31, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:06.900 [info] Local completions are []
23:46:06.900 [info] Emitting completions: []
23:46:07.254 [info] Completion for %LXical.Document.Position{line: 26, character: 32, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_1\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:07.344 [info] Local completions are []
23:46:07.344 [info] Emitting completions: []
23:46:07.596 [info] Completion for %LXical.Document.Position{line: 26, character: 33, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:07.677 [info] Local completions are []
23:46:07.677 [info] Emitting completions: []
23:46:08.246 [info] Completion for %LXical.Document.Position{line: 26, character: 34, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:08.324 [info] Local completions are []
23:46:08.324 [info] Emitting completions: []
23:46:08.796 [info] Completion for %LXical.Document.Position{line: 26, character: 36, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:08.880 [info] Local completions are []
23:46:08.880 [info] Emitting completions: []
23:46:08.920 [info] Completion for %LXical.Document.Position{line: 26, character: 37, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:08.931 [info] Local completions are []
23:46:08.931 [info] Emitting completions: []
23:46:09.795 [info] Completion for %LXical.Document.Position{line: 26, character: 40, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.svg\"}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:09.808 [info] Local completions are []
23:46:09.808 [info] Emitting completions: []
23:46:11.922 [info] Completion for %LXical.Document.Position{line: 26, character: 46, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.svg\" ckla}", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:46:12.017 [info] Local completions are []
23:46:12.017 [info] Emitting completions: []
23:46:17.411 [info] Compiled ativar in 57 ms
23:46:26.809 [error] Invalid diagnostic: {:exception, {%FunctionClauseError{module: LXical.RemoteControl.Build.Error, function: :error_to_diagnostic, arity: 4, kind: nil, args: [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 151, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 5, description: "expected closing `>` or `/>`\n\nMake sure the tag is properly closed. This may happen if there\nis an EEx interpolation inside a tag, which is not supported.\nFor instance, instead of\n\n    <div id=\"<%= @id %>\">Content</div>\n\ndo\n\n    <div id={@id}>Content</div>\n\nIf @id is nil or false, then no attribute is sent at all.\n\nInside {...} you can place any Elixir expression. If you want\nto interpolate in the middle of an attribute value, instead of\n\n    <a class=\"foo bar <%= @class %>\">Text</a>\n\nyou can pass an Elixir string with interpolation:\n\n    <a class={\"foo bar \#{@class}\"}>Text</a>\n", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 27}, [{Phoenix.LiveView.Tokenizer, :handle_maybe_tag_open_end, 5, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 418]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"}\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [...], ...], [...]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line: 31, column: 26], nil}, :__given__]}]}, {:apply, [closing: [line: 32, column: 47], line: 32, column: 5], [{:__aliases__, [last: [line: 32, column: 11], line: 32, column: 11], [:Lucideicons]}, {{:., [line: 32, column: 31], [{:assigns, [...], ...}, :name]}, [no_parens: true, line: 32, column: 32], []}, [{:assigns, [line: 32, column: 39], nil}]]}]}]]}]}]]}], clauses: nil}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, 4, [file: ~c"lib/lexical/remote_control/build/error.ex", line: 187]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :do_compile, 2, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 53]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :compile, 3, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 26]}, {Mix.Project, :in_project, 4, [file: ~c"lib/mix/project.ex", line: 458]}, {File, :cd!, 2, [file: ~c"lib/file.ex", line: 1624]}, {LXical.RemoteControl.Mix, :"-in_project/2-fun-0-", 3, [file: ~c"lib/lexical/remote_control/mix.ex", line: 29]}, {:global, :trans, 4, [file: ~c"global.erl", line: 477]}, {:timer, :tc, 1, [file: ~c"timer.erl", line: 235]}]}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 151, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 5, description: "expected closing `>` or `/>`\n\nMake sure the tag is properly closed. This may happen if there\nis an EEx interpolation inside a tag, which is not supported.\nFor instance, instead of\n\n    <div id=\"<%= @id %>\">Content</div>\n\ndo\n\n    <div id={@id}>Content</div>\n\nIf @id is nil or false, then no attribute is sent at all.\n\nInside {...} you can place any Elixir expression. If you want\nto interpolate in the middle of an attribute value, instead of\n\n    <a class=\"foo bar <%= @class %>\">Text</a>\n\nyou can pass an Elixir string with interpolation:\n\n    <a class={\"foo bar \#{@class}\"}>Text</a>\n", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 27}, [{Phoenix.LiveView.Tokenizer, :handle_maybe_tag_open_end, 5, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 418]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, (truncated)
23:46:27.874 [info] Compiled ativar in 40 ms
23:46:36.058 [error] Invalid diagnostic: {:exception, {%FunctionClauseError{module: LXical.RemoteControl.Build.Error, function: :error_to_diagnostic, arity: 4, kind: nil, args: [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 152, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 5, description: "expected closing `>` or `/>`\n\nMake sure the tag is properly closed. This may happen if there\nis an EEx interpolation inside a tag, which is not supported.\nFor instance, instead of\n\n    <div id=\"<%= @id %>\">Content</div>\n\ndo\n\n    <div id={@id}>Content</div>\n\nIf @id is nil or false, then no attribute is sent at all.\n\nInside {...} you can place any Elixir expression. If you want\nto interpolate in the middle of an attribute value, instead of\n\n    <a class=\"foo bar <%= @class %>\">Text</a>\n\nyou can pass an Elixir string with interpolation:\n\n    <a class={\"foo bar \#{@class}\"}>Text</a>\n", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 27}, [{Phoenix.LiveView.Tokenizer, :handle_maybe_tag_open_end, 5, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 418]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} \n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [...], ...], [...]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line: 31, column: 26], nil}, :__given__]}]}, {:apply, [closing: [line: 32, column: 47], line: 32, column: 5], [{:__aliases__, [last: [line: 32, column: 11], line: 32, column: 11], [:Lucideicons]}, {{:., [line: 32, column: 31], [{:assigns, [...], ...}, :name]}, [no_parens: true, line: 32, column: 32], []}, [{:assigns, [line: 32, column: 39], nil}]]}]}]]}]}]]}], clauses: nil}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, 4, [file: ~c"lib/lexical/remote_control/build/error.ex", line: 187]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :do_compile, 2, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 53]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :compile, 3, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 26]}, {Mix.Project, :in_project, 4, [file: ~c"lib/mix/project.ex", line: 458]}, {File, :cd!, 2, [file: ~c"lib/file.ex", line: 1624]}, {LXical.RemoteControl.Mix, :"-in_project/2-fun-0-", 3, [file: ~c"lib/lexical/remote_control/mix.ex", line: 29]}, {:global, :trans, 4, [file: ~c"global.erl", line: 477]}, {:timer, :tc, 1, [file: ~c"timer.erl", line: 235]}]}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 152, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 5, description: "expected closing `>` or `/>`\n\nMake sure the tag is properly closed. This may happen if there\nis an EEx interpolation inside a tag, which is not supported.\nFor instance, instead of\n\n    <div id=\"<%= @id %>\">Content</div>\n\ndo\n\n    <div id={@id}>Content</div>\n\nIf @id is nil or false, then no attribute is sent at all.\n\nInside {...} you can place any Elixir expression. If you want\nto interpolate in the middle of an attribute value, instead of\n\n    <a class=\"foo bar <%= @class %>\">Text</a>\n\nyou can pass an Elixir string with interpolation:\n\n    <a class={\"foo bar \#{@class}\"}>Text</a>\n", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 27}, [{Phoenix.LiveView.Tokenizer, :handle_maybe_tag_open_end, 5, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 418]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2 (truncated)
23:46:36.454 [error] Invalid diagnostic: {:exception, {%FunctionClauseError{module: LXical.RemoteControl.Build.Error, function: :error_to_diagnostic, arity: 4, kind: nil, args: [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 153, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 43, description: "expected attribute name", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} /\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [...], ...], [...]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line: 31, column: 26], nil}, :__given__]}]}, {:apply, [closing: [line: 32, column: 47], line: 32, column: 5], [{:__aliases__, [last: [line: 32, column: 11], line: 32, column: 11], [:Lucideicons]}, {{:., [line: 32, column: 31], [{:assigns, [...], ...}, :name]}, [no_parens: true, line: 32, column: 32], []}, [{:assigns, [line: 32, column: 39], nil}]]}]}]]}]}]]}], clauses: nil}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, 4, [file: ~c"lib/lexical/remote_control/build/error.ex", line: 187]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :do_compile, 2, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 53]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :compile, 3, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 26]}, {Mix.Project, :in_project, 4, [file: ~c"lib/mix/project.ex", line: 458]}, {File, :cd!, 2, [file: ~c"lib/file.ex", line: 1624]}, {LXical.RemoteControl.Mix, :"-in_project/2-fun-0-", 3, [file: ~c"lib/lexical/remote_control/mix.ex", line: 29]}, {:global, :trans, 4, [file: ~c"global.erl", line: 477]}, {:timer, :tc, 1, [file: ~c"timer.erl", line: 235]}]}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 153, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 43, description: "expected attribute name", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} /\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [line: 31, ...], line: 31, ...], [:Map]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line:  (truncated)
23:46:37.802 [info] Compiled ativar in 106 ms
23:46:41.380 [info] Compiled ativar in 35 ms
23:46:44.467 [info] Compiled ativar in 103 ms
23:48:21.193 [error] Invalid diagnostic: {:exception, {%FunctionClauseError{module: LXical.RemoteControl.Build.Error, function: :error_to_diagnostic, arity: 4, kind: nil, args: [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 163, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 50, description: "invalid attribute value after `=`. Expected either a value between quotes (such as \"value\" or 'value') or an Elixir expression between curly brackets (such as `{expr}`)", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} class= />\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [...], ...], [...]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line: 31, column: 26], nil}, :__given__]}]}, {:apply, [closing: [line: 32, column: 47], line: 32, column: 5], [{:__aliases__, [last: [line: 32, column: 11], line: 32, column: 11], [:Lucideicons]}, {{:., [line: 32, column: 31], [{:assigns, [...], ...}, :name]}, [no_parens: true, line: 32, column: 32], []}, [{:assigns, [line: 32, column: 39], nil}]]}]}]]}]}]]}], clauses: nil}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, 4, [file: ~c"lib/lexical/remote_control/build/error.ex", line: 187]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :do_compile, 2, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 53]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :compile, 3, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 26]}, {Mix.Project, :in_project, 4, [file: ~c"lib/mix/project.ex", line: 458]}, {File, :cd!, 2, [file: ~c"lib/file.ex", line: 1624]}, {LXical.RemoteControl.Mix, :"-in_project/2-fun-0-", 3, [file: ~c"lib/lexical/remote_control/mix.ex", line: 29]}, {:global, :trans, 4, [file: ~c"global.erl", line: 477]}, {:timer, :tc, 1, [file: ~c"timer.erl", line: 235]}]}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 163, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 50, description: "invalid attribute value after `=`. Expected either a value between quotes (such as \"value\" or 'value') or an Elixir expression between curly brackets (such as `{expr}`)", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} class= />\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], (truncated)
23:48:23.201 [info] Compiled ativar in 104 ms
23:48:25.163 [info] Completion for %LXical.Document.Position{line: 26, character: 48, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.svg\"} class\" />", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:48:25.228 [info] Local completions are []
23:48:25.228 [info] Emitting completions: []
23:48:25.502 [error] Invalid diagnostic: {:exception, {%FunctionClauseError{module: LXical.RemoteControl.Build.Error, function: :error_to_diagnostic, arity: 4, kind: nil, args: [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 171, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 43, description: "invalid character in attribute name: \"", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} \" />\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [...], ...], [...]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line: 31, column: 26], nil}, :__given__]}]}, {:apply, [closing: [line: 32, column: 47], line: 32, column: 5], [{:__aliases__, [last: [line: 32, column: 11], line: 32, column: 11], [:Lucideicons]}, {{:., [line: 32, column: 31], [{:assigns, [...], ...}, :name]}, [no_parens: true, line: 32, column: 32], []}, [{:assigns, [line: 32, column: 39], nil}]]}]}]]}]}]]}], clauses: nil}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, 4, [file: ~c"lib/lexical/remote_control/build/error.ex", line: 187]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :do_compile, 2, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 53]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :compile, 3, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 26]}, {Mix.Project, :in_project, 4, [file: ~c"lib/mix/project.ex", line: 458]}, {File, :cd!, 2, [file: ~c"lib/file.ex", line: 1624]}, {LXical.RemoteControl.Mix, :"-in_project/2-fun-0-", 3, [file: ~c"lib/lexical/remote_control/mix.ex", line: 29]}, {:global, :trans, 4, [file: ~c"global.erl", line: 477]}, {:timer, :tc, 1, [file: ~c"timer.erl", line: 235]}]}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 171, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 43, description: "invalid character in attribute name: \"", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} \" />\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [line: 31, ...], line: 31, ...], [:Map]}, :delete]}, [closing: [line: 31, column: 45], li (truncated)
23:48:27.443 [info] Compiled ativar in 98 ms
23:48:59.284 [info] Compiled ativar in 26 ms
23:51:56.942 [info] Completion for %LXical.Document.Position{line: 26, character: 48, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.svg\"} class />", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:51:57.034 [info] Local completions are []
23:51:57.034 [info] Emitting completions: []
23:51:57.322 [error] Invalid diagnostic: {:exception, {%FunctionClauseError{module: LXical.RemoteControl.Build.Error, function: :error_to_diagnostic, arity: 4, kind: nil, args: [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 182, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 50, description: "invalid attribute value after `=`. Expected either a value between quotes (such as \"value\" or 'value') or an Elixir expression between curly brackets (such as `{expr}`)", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} class= />\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], [{:=, [end_of_expression: [newlines: 1, line: 31, column: 46], line: 31, column: 13], [{:assigns, [line: 31, column: 5], nil}, {{:., [line: 31, column: 18], [{:__aliases__, [last: [...], ...], [...]}, :delete]}, [closing: [line: 31, column: 45], line: 31, column: 19], [{:assigns, [line: 31, column: 26], nil}, :__given__]}]}, {:apply, [closing: [line: 32, column: 47], line: 32, column: 5], [{:__aliases__, [last: [line: 32, column: 11], line: 32, column: 11], [:Lucideicons]}, {{:., [line: 32, column: 31], [{:assigns, [...], ...}, :name]}, [no_parens: true, line: 32, column: 32], []}, [{:assigns, [line: 32, column: 39], nil}]]}]}]]}]}]]}], clauses: nil}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, 4, [file: ~c"lib/lexical/remote_control/build/error.ex", line: 187]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :do_compile, 2, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 53]}, {LXical.RemoteControl.Build.Document.Compilers.Quoted, :compile, 3, [file: ~c"lib/lexical/remote_control/build/document/compilers/quoted.ex", line: 26]}, {Mix.Project, :in_project, 4, [file: ~c"lib/mix/project.ex", line: 458]}, {File, :cd!, 2, [file: ~c"lib/file.ex", line: 1624]}, {LXical.RemoteControl.Mix, :"-in_project/2-fun-0-", 3, [file: ~c"lib/lexical/remote_control/mix.ex", line: 29]}, {:global, :trans, 4, [file: ~c"global.erl", line: 477]}, {:timer, :tc, 1, [file: ~c"timer.erl", line: 235]}]}, [{LXical.RemoteControl.Build.Error, :error_to_diagnostic, [#LXical.Document<path: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", version: 182, dirty?: true, lines: %Lines<"defmodule AtivarWeb.Layouts do..."(34 lines)>, ...>, %{__exception__: true, __struct__: Phoenix.LiveView.Tokenizer.ParseError, column: 50, description: "invalid attribute value after `=`. Expected either a value between quotes (such as \"value\" or 'value') or an Elixir expression between curly brackets (such as `{expr}`)", file: "/home/douglas/Projects/ativar/lib/ativar_web/components/layouts.ex", line: 26}, [{Phoenix.LiveView.Tokenizer, :raise_syntax_error!, 3, [file: ~c"lib/phoenix_live_view/tokenizer.ex", line: 711]}, {Phoenix.LiveView.TagEngine, :handle_text, 3, [file: ~c"lib/phoenix_live_view/tag_engine.ex", line: 278]}, {EEx.Compiler, :generate_buffer, 4, [file: ~c"lib/eex/compiler.ex", line: 317]}, {Phoenix.Component, :sigil_H, 2, [file: ~c"expanding macro"]}, {AtivarWeb.Layouts, :lucide_icon, 1, [file: ~c"lib/ativar_web/components/layouts.ex", line: 25]}], {:defmodule, [do: [line: 1, column: 29], end: [line: 34, column: 1], line: 1, column: 1], [{:__aliases__, [last: [line: 1, column: 21], line: 1, column: 11], [:AtivarWeb, :Layouts]}, [do: {:__block__, [], [{:use, [end_of_expression: [newlines: 2, line: 2, column: 23], line: 2, column: 3], [{:__aliases__, [last: [line: 2, column: 7], line: 2, column: 7], [:AtivarWeb]}, :html]}, {:embed_templates, [end_of_expression: [newlines: 2, line: 4, column: 31], closing: [line: 4, column: 30], line: 4, column: 3], ["layouts/*"]}, {:def, [end_of_expression: [newlines: 2, line: 20, column: 6], do: [line: 6, column: 23], end: [line: 20, column: 3], line: 6, column: 3], [{:navbar, [closing: [line: 6, column: 21], line: 6, column: 7], [{:assigns, [line: 6, column: 14], nil}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 7, column: 5], [{:<<>>, [indentation: 4, line: 7, column: 5], ["<nav class=\"nav-container\">\n  <img src={~p\"/images/logo_horizontal.svg\"} class=\"logo\" />\n  <ul class=\"nav-menu\">\n\n    <.link :for={{menu_name, path, icon} <- @menus} navigate={path}>\n      <li class={\"nav-menu-item \#{if path == @current_path, do: \"active\"}\"}>\n        <.lucide_icon name={icon} /> <%= menu_name %>\n      </li>\n    </.link>\n  </ul>\n</nav>\n"]}, []]}]]}, {:attr, [end_of_expression: [newlines: 2, line: 22, column: 37], closing: [line: 22, column: 36], line: 22, column: 3], [:name, :atom, [required: true]]}, {:def, [end_of_expression: [newlines: 2, line: 28, column: 6], do: [line: 24, column: 52], end: [line: 28, column: 3], line: 24, column: 3], [{:lucide_icon, [closing: [line: 24, column: 50], line: 24, column: 7], [{:=, [line: 24, column: 41], [{:%{}, [closing: [line: 24, column: 39], line: 24, column: 20], [name: :ativar_logo]}, {:assigns, [line: 24, column: 43], nil}]}]}, [do: {:sigil_H, [delimiter: "\"\"\"", line: 25, column: 5], [{:<<>>, [indentation: 4, line: 25, column: 5], ["<img src={~p\"/images/logo_16x16.svg\"} class= />\n"]}, []]}]]}, {:def, [do: [line: 30, column: 28], end: [line: 33, column: 3], line: 30, column: 3], [{:lucide_icon, [closing: [line: 30, column: 26], line: 30, column: 7], [{:assigns, [line: 30, column: 19], nil}]}, [do: {:__block__, [], (truncated)
23:51:58.274 [info] Completion for %LXical.Document.Position{line: 26, character: 54, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.svg\"} class=\"logo\" />", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:51:58.332 [info] Local completions are []
23:51:58.332 [info] Emitting completions: []
23:51:59.689 [info] Completion for %LXical.Document.Position{line: 26, character: 55, valid?: true, context_line: {:line, "    <img src={~p\"/images/logo_16x16.svg\"} class=\"logo-\" />", "\n", 26, true}, document_line_count: 34, starting_index: 1}
23:51:59.689 [info] Local completions are []
23:51:59.689 [info] Emitting completions: []
23:52:00.840 [info] Emitting completions: []
23:52:01.539 [info] Emitting completions: []
23:52:02.039 [info] Emitting completions: []
23:52:04.209 [info] Compiled ativar in 114 ms
23:56:25.782 [info] Compiled ativar in 124 ms
23:56:29.528 [info] Compiled ativar in 108 ms
23:57:38.762 [info] Compiled ativar in 116 ms
23:58:29.725 [info] Compiled ativar in 26 ms
23:58:30.474 [error] Shutting down
